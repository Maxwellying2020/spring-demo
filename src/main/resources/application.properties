server.port=8081
server.connection-timeout=60000
spring.application.name=demo
spring.main.banner-mode=OFF

#project basic setting
project=springboot
environment=dev
version=v0-snapshot

#consul setting
spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500
spring.cloud.consul.enabled=true
spring.cloud.consul.discovery.enabled=true
spring.cloud.consul.discovery.serviceName=${project}-${environment}-${spring.application.name}-${version}
spring.cloud.consul.discovery.healthCheckPath=/health
spring.cloud.consul.discovery.healthCheckInterval=10s
spring.cloud.consul.discovery.port=${server.port}
spring.cloud.consul.discovery.tags=app-service,projectenv-${project}-${environment},\
  version-${version},\
  cluster-springcloud-microservice,\
  contextpath-${spring.application.name}


#spring datasource setting Postgres
#spring.datasource.url = jdbc:postgresql://10.175.1.140:9991/cd_sit_crt?currentSchema=crt
#spring.datasource.username = crt
#spring.datasource.password = SDwe12345678()*

#local
spring.datasource.url = jdbc:postgresql://localhost:5434/local_test?currentSchema=test
spring.datasource.username = postgres
spring.datasource.password = admin
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1




#spring datasource setting MySQL
#mySql setting
#spring.datasource.url=jdbc:mysql://10.11.90.7:3306/test?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
#spring.datasource.username=root
#spring.datasource.password=Passwd123!
#spring.jpa.properties.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

#spring jpa setting
spring.jpa.properties.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.format_sql=false


#Redis单节点服务 local
#spring.redis.host=192.168.0.7
#spring.redis.port=6379
#spring.redis.password=
#spring.redis.database=0
#spring.redis.lettuce.pool.max-active=8
#spring.redis.lettuce.pool.max-wait=-1
#spring.redis.lettuce.pool.max-idle=8
#spring.redis.lettuce.pool.min-idle=0
#spring.redis.timeout=3000
spring.redis.host=121.40.116.197
spring.redis.password=Cmiov2019@
spring.redis.port=16333
spring.redis.lettuce.pool.max-active=8
spring.redis.lettuce.pool.max-wait=-1
spring.redis.lettuce.pool.max-idle=8
spring.redis.lettuce.pool.min-idle=0
spring.redis.timeout=3000

#kafka
#spring.cloud.stream.kafka.binder.brokers=192.168.0.12:9092
#spring.cloud.stream.kafka.binder.zk-nodes=192.168.0.7:2181
#spring.cloud.stream.kafka.binder.minPartitionCount=3
#spring.cloud.stream.kafka.binder.autoCreateTopics=true
#spring.cloud.stream.kafka.binder.autoAddPartitions=true
#spring.cloud.stream.kafka.binder.replicationFactor=3

spring.cloud.stream.kafka.binder.brokers=121.40.116.197:9092
spring.cloud.stream.kafka.binder.zk-nodes=121.40.116.197:2181
spring.cloud.stream.kafka.binder.minPartitionCount=3
spring.cloud.stream.kafka.binder.autoCreateTopics=true
spring.cloud.stream.kafka.binder.autoAddPartitions=true

dmp.schedule.timer.cron=0 0-1 * * * ?

#默认对外暴露端点的请求路径是/actuator/***,这里做了修改
management.endpoints.web.base-path=/
#显示相信的信息
management.endpoint.health.show-details = always
#优雅的关闭spring boot貌似还没有实现,参考文章：https://www.jianshu.com/p/0c49eb23c627
management.endpoint.shutdown.enabled=true
#springboot actuator只对外暴露了health和infor端点；
# 放开所有端点，添加如下配置：
management.endpoints.web.exposure.include=*
#开放部分端点
#management.endpoints.web.exposure.include=beans,env,autoconfig
